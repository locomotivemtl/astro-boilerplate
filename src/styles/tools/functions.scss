// ==========================================================================
// Tools / Functions
// ==========================================================================

// Returns calculation of a percentage of the viewport small height.
//
// ```scss
// .c-box {
//     height: svh(100);
// }
// ```
//
// @param  {number} $number - The percentage number
// @return {function<number>} in svh
@function svh($number) {
    @return calc(#{$number} * var(--svh, 1svh));
}

// Returns calculation of a percentage of the viewport large height.
//
// ```scss
// .c-box {
//     height: lvh(100);
// }
// ```
//
// @param  {number} $number - The percentage number
// @return {function<number>} in lvh
@function lvh($number) {
    @return calc(#{$number} * var(--lvh, 1lvh));
}

// Returns calculation of a percentage of the viewport dynamic height.
//
// ```scss
// .c-box {
//     height: dvh(100);
// }
// ```
//
// @param  {number} $number - The percentage number
// @return {function<number>} in dvh
@function dvh($number) {
    @return calc(#{$number} * var(--dvh, 1dvh));
}

// Returns calculation of a percentage of the viewport width.
//
// ```scss
// .c-box {
//     width: vw(100);
// }
// ```
//
// @param  {number} $number - The percentage number
// @return {function<number>} in vw

@function vw($number) {
    @return calc(#{$number} * var(--vw, 1vw));
}

// Returns calculation of a percentage of the grid cell width
// with optional inset of grid gutter.
//
// ```scss
// .c-box {
//     width: grid-space(math.div(6, 12));
//     margin-left: grid-space(math.div(1, 12), 1);
// }
// ```
//
// @param  {number} $number - The percentage number
// @param  {number} $inset  - The grid gutter inset
// @return {function<number>}
@function grid-space($number, $inset: 0) {
    @return calc(
        #{$number} * (#{vw(100)} - 2 * var(--grid-margin, 0px)) - (1 - #{$number}) * var(
                --grid-gutter,
                0px
            ) + #{$inset} * var(--grid-gutter, 0px)
    );
}
